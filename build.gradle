buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }

    dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '[6.0,6.2)', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

//Plugins
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'

//Set source level
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

base {
	archivesName = project.properties['file_name']
}

group='com.builtbroken.aiimprovements'

//Minecraft build settings
minecraft {
    mappings channel: project.properties['mappings_channel'], version: project.properties['mappings']
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	copyIdeResources = true

    runs {
        client {
            workingDirectory project.file('run/client')
            properties 'forge.logging.console.level': 'debug'

            mods {
                aiimprovements {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run/server')
            properties 'forge.logging.console.level': 'debug'

            mods {
                aiimprovements {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft project.properties['forge_version']
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes(["Specification-Title": "AI-Improvements",
                    "Specification-Vendor": "Built Broken Modding",
                    "Specification-Version": project.properties['version'],
                    "Implementation-Title": "AI-Improvements",
                    "Implementation-Version": project.properties['version'],
                    "Implementation-Vendor" :"Built Broken Modding"])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
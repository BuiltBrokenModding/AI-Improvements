buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

//Plugins
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

//Set source level
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

archivesBaseName=project.properties['file_name']
group='com.builtbroken.aiimprovements'

//Minecraft build settings
minecraft {
    mappings channel: 'official', version: project.properties['mcp_mappings']
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client = {
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
        server = {
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
    }
}

dependencies {
    minecraft project.properties['forge_version']
}

jar {
    manifest {
        attributes(["Specification-Title": "AI-Improvements",
                    "Specification-Vendor": "Built Broken Modding",
                    "Specification-Version": project.properties['version'],
                    "Implementation-Title": "AI-Improvements",
                    "Implementation-Version": project.properties['version'],
                    "Implementation-Vendor" :"Built Broken Modding",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")])
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        expand 'version': project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}